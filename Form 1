using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel;

namespace Proyecto
{
    public partial class Form1 : Form
    {
        public Point ubicacionForm1;

        string connectionString;

        public Form1()
        {
            InitializeComponent();
            this.MaximizeBox = false; // Deshabilitar el botón de maximizar
            this.FormBorderStyle = FormBorderStyle.FixedSingle; // Deshabilitar que se pueda extirar la ventana
            connectionString = "Server=tcp:telecotest.database.windows.net,1433;Initial Catalog=TelecoTest;Persist Security Info=False;User ID=revilla;Password=Lapspmolamucho5%;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"; //Base de Datos online
            //connectionString = @"Data Source=REVILLA\SQLEXPRESSDB;Initial Catalog=master ;User ID=sa;Password=revilla"; //Base de Datos local
        }

        private void BRegistrar_Click(object sender, EventArgs e)
        {
            //Puente para no tener que usar la base de datos para pasar al siguiente formulario
            //Form2 form2 = new Form2();
            //form2.Show();
            //this.Hide();
            //BORRAR DESPUES

            //AVISO LEY PROTECCIÓN DE DATOS
            string mensaje = "AVISO DE PROTECCIÓN DE DATOS\n\nEn cumplimiento de la Ley de Protección de Datos Personales, le informamos que los datos personales que proporciona a través de esta aplicación serán tratados de forma confidencial y utilizados únicamente para los fines específicos para los que se hayan recopilado. Los datos recopilados tienen como único fin el acceso al juego y la posible aparición del nombre en el top 10 de las mejores notas.\n\nTiene derecho a acceder a sus datos personales, rectificarlos, cancelarlos y oponerse a su tratamiento en cualquier momento. Para ejercer estos derechos, por favor, póngase en contacto a través del correo: 5a3jbER8@padrearamburuburgoso365.educamos.com.\n\nAl utilizar esta aplicación, usted acepta que sus datos personales sean procesados de acuerdo con esta política de privacidad. Si no está de acuerdo con esta política, por favor, absténgase de utilizar esta aplicación.";

            MessageBox.Show(mensaje, "Aviso de protección de datos", MessageBoxButtons.OK, MessageBoxIcon.Information);


            //MessageBox.Show("Porfavor introduce tu usuario.");

            String userName = TBusuario.Text;
            String userPassword = TBcontrasena.Text;


            if (userName.Equals(""))
            {
                //MessageBox.Show("Porfavor introduce tu usuario.");
                label1.Text = "Porfavor introduce tu usuario.";
                label1.Visible = true;
            }
            else if (userPassword.Equals(""))
            {
                //MessageBox.Show("Porfavor introduce tu contraseña.");
                label1.Text = "Porfavor introduce tu contraseña.";
                label1.Visible = true;
            }
            else
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    String query = "INSERT INTO dbo.Usuarios (Usuario, Contrasena) VALUES (@usuario,@contrasena)";

                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@usuario", TBusuario.Text);
                        command.Parameters.AddWithValue("@contrasena", TBcontrasena.Text);

                        connection.Open();

                        SqlCommand commandrevisar = new SqlCommand("SELECT * FROM dbo.Usuarios WHERE Usuario='" + userName + "'", connection);
                        using (SqlDataReader Reader = commandrevisar.ExecuteReader())
                        {
                            if(Reader.Read())
                            {
                                //MessageBox.Show("Usuario ya registrado.");
                                label1.Text = "Usuario ya registrado.";
                                label1.Visible = true;
                                return;
                            }
                        }
                    int result = command.ExecuteNonQuery();
                        if (result < 0)
                           Console.WriteLine("Error inserting data into Database!");
                        //MessageBox.Show("Te has registrado correctamente.");
                        label1.Text = "Te has registrado correctamente.";
                        label1.Visible = true;
                    }
                }
            }
        }

        private void Biniciarsesion_Click(object sender, EventArgs e)
        {
            String userName = TBusuario.Text;
            String userPassword = TBcontrasena.Text;

            if (userName.Equals(""))
            {
                //MessageBox.Show("Porfavor introduce tu usuario.");
                label1.Text = "Porfavor introduce tu usuario.";
                label1.Visible = true;
            }
            else if (userPassword.Equals(""))
            {
                //MessageBox.Show("Porfavor introduce tu contraseña.");
                label1.Text = "Porfavor introduce tu contraseña.";
                label1.Visible = true;
            }
            else
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    SqlCommand command = new SqlCommand("SELECT * FROM dbo.Usuarios WHERE Usuario='" + userName + "' and Contrasena ='" + userPassword + "'",connection);
                    using (SqlDataReader Reader = command.ExecuteReader())
                    {
                        if (Reader.Read()) 
                        {
                            label1.Visible = false;
                            //MessageBox.Show("Has iniciado sesión correctamente.");

                            // Obtener la ubicación actual del formulario 1
                            //Point ubicacionForm1 = this.Location;
                            // Crear una instancia del formulario 2 y pasar la ubicación del formulario 1 como parámetro
                            Form2 form2 = new Form2();

                            form2.label7.Text = userName;
                            form2.label8.Text = userPassword;
                            form2.ubicacionForm1 = this.ubicacionForm1;
                            form2.Show();
                            this.Hide();
                        }
                        else
                        {
                            //MessageBox.Show("Usuario o contraseña incorrectos.");
                            label1.Text = "Usuario o contraseña incorrectos.";
                            label1.Visible = true;
                        }
                    } 
                }
            }
        }

        private void Form1_Load(object sender, EventArgs e) 
        {
            Lusuario.BackColor = Color.Transparent;
            Lcontrasena.BackColor = Color.Transparent;
            label1.BackColor = Color.Transparent;

            ubicacionForm1 = this.Location;

            //Información
            label6.AutoSize = false; // Para que el tamaño se respete
            label6.Size = new Size(290, 320);
            label6.Font = new Font("Microsoft Sans Serif", 10, FontStyle.Regular);
            label6.Text = "Proyecto realizado por Miguel Revilla de 2ºEST.\nEl siguiente proyecto es un juego interactivo de 10 preguntas. Son preguntas tipo test, con 3 respuestas, del modulo de EST del segundo año. Son al azar al igual que el orden de las respuestas.\nSi aciertas sumarás un punto en cambio si fallas se restará 0.33 puntos. Tendrás la opción de pasar a otra pregunta si no te la sabes. Si consigues una puntuación negativa, se guardará la puntuación 0.00.\nSi consigues una menor puntuación que la anterior, no se guardará\nEn caso de empate con otro jugador , ganará el que en menos tiempo lo haya realizado.\n¿Estás listo para jugar? ¿Lograrás el Top 1?";

            //Estadísticas
            using (SqlConnection connection = new SqlConnection(connectionString)) //Numero total de usuarios
            {
                connection.Open();
                string consulta1 = "SELECT COUNT(*) FROM dbo.Usuarios";
                using (SqlCommand comando1 = new SqlCommand(consulta1, connection))
                {
                    int totalUsuarios = Convert.ToInt32(comando1.ExecuteScalar());
                    label2.Text = "Número total de usuarios: " + totalUsuarios.ToString();
                }
                connection.Close();
            }

            using (SqlConnection connection = new SqlConnection(connectionString)) //Tiempo medio de todos los usuarios
            {
                connection.Open();
                string consulta2 = "SELECT AVG(CAST(DATEDIFF(MILLISECOND, '00:00:00.000', Tiempo) AS decimal(18,3))) FROM dbo.Usuarios";
                using (SqlCommand comando2 = new SqlCommand(consulta2, connection))
                {
                    decimal media = (decimal)comando2.ExecuteScalar();
                    TimeSpan mediaTiempo = TimeSpan.FromMilliseconds((double)media);
                    label3.Text = string.Format("Tiempo medio: {0:mm\\:ss\\.fff}", mediaTiempo);
                }
                connection.Close();
            }


            /*using (SqlConnection connection = new SqlConnection(connectionString)) //Puntuación mas alta
            {
                connection.Open();
                string consulta3 = "SELECT MAX(puntos) FROM dbo.Usuarios";
                using (SqlCommand comando3 = new SqlCommand(consulta3, connection))
                {
                    int maxScore = (int)comando3.ExecuteScalar();
                    //labelX.Text = "La puntuación mas alta es: " + maxScore.ToString();
                }
                connection.Close() ;
            }

            using (SqlConnection connection = new SqlConnection(connectionString)) //Puntuación mas baja
            {
                connection.Open();
                string consulta3 = "SELECT MIN(puntos) FROM dbo.Usuarios";
                using (SqlCommand comando3 = new SqlCommand(consulta3, connection))
                {
                    int maxScore = (int)comando3.ExecuteScalar();
                    //labelX.Text = "La puntuación mas baja es: " + maxScore.ToString();
                }
                connection.Close();
            }*/

            using (SqlConnection connection = new SqlConnection(connectionString)) //Puntuación media
            {
                connection.Open();
                string consulta3 = "SELECT AVG(Puntos) FROM dbo.Usuarios";
                using (SqlCommand comando3 = new SqlCommand(consulta3, connection))
                {
                    decimal avg = (decimal)comando3.ExecuteScalar();
                    decimal puntuacionMedia2decimales = Math.Round(avg, 2);
                    label4.Text = "Puntuación media : " + puntuacionMedia2decimales.ToString();
                }
                connection.Close();
            }

            using (SqlConnection connection = new SqlConnection(connectionString)) //Usuarios que han aprobado y su porcentaje
            {
                connection.Open();
                string consulta = "SELECT COUNT(*) FROM dbo.Usuarios";
                using (SqlCommand comando = new SqlCommand(consulta, connection))
                {
                    int totalUsuarios = Convert.ToInt32(comando.ExecuteScalar());

                    string consultaAprobados = "SELECT COUNT(*) FROM dbo.Usuarios WHERE Puntos >= 5";
                    using (SqlCommand comandoAprobados = new SqlCommand(consultaAprobados, connection))
                    {
                        int cantidadAprobados = Convert.ToInt32(comandoAprobados.ExecuteScalar());
                        decimal porcentajeAprobados = ((decimal)cantidadAprobados / (decimal)totalUsuarios) * 100;
                        label5.Text = "Total de usuarios aprobados: " + cantidadAprobados;
                        label7.Text = "Porcentaje de usuarios aprobados: " + porcentajeAprobados.ToString("0.00") + "%";
                    }
                }
                connection.Close();
            }
        }

        private void BJugar_Click(object sender, EventArgs e)
        {
            BJugar.Visible = false;
            BInformación.Visible = false;
            BEstadísticas.Visible = false;
            BSalir.Visible = false;

            BAtras.Visible = true;

            Lusuario.Visible = true;
            Lcontrasena.Visible = true;
            TBusuario.Visible = true;
            TBcontrasena.Visible = true;
            BRegistrar.Visible = true;
            Biniciarsesion.Visible = true;
        }

        private void BInformación_Click(object sender, EventArgs e)
        {
            BJugar.Visible = false;
            BInformación.Visible = false;
            BEstadísticas.Visible = false;
            BSalir.Visible = false;

            BAtras.Visible = true;

            pictureBox1.Visible = true;

            label6.Visible = true;

            label6.Location = new Point(365, 205);

        }

        private void BEstadísticas_Click(object sender, EventArgs e)
        {
            BJugar.Visible = false;
            BInformación.Visible = false;
            BEstadísticas.Visible = false;
            BSalir.Visible = false;

            BAtras.Visible = true;

            pictureBox1.Visible = true;
            LEstadísticas.Text = "Estadísticas:";
            LEstadísticas.Font = new Font(LEstadísticas.Font, FontStyle.Bold);

            LEstadísticas.Visible = true;
            LEstadísticas.Location = new Point(370,210);
            label2.Visible = true;
            label2.Location = new Point(370, 230);
            label3.Visible = true;
            label3.Location = new Point(370, 250);
            label4.Visible = true;
            label4.Location = new Point(370, 270);
            label5.Visible = true;
            label5.Location = new Point(370, 290);
            label7.Visible = true;
            label7.Location = new Point(370, 310);

        }

        private void BSalir_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void BAtras_Click(object sender, EventArgs e)
        {
            label1.Visible = false;

            //MENU INICIO
            BJugar.Visible = true;
            BInformación.Visible = true;
            BEstadísticas.Visible = true;
            BSalir.Visible = true;

            BAtras.Visible = false;

            //LOGIN/REGISTER
            Lusuario.Visible = false;
            Lcontrasena.Visible = false;
            TBusuario.Visible = false;
            TBcontrasena.Visible = false;
            BRegistrar.Visible = false;
            Biniciarsesion.Visible = false;
            
            //ESTADÍSTICAS
            LEstadísticas.Visible = false;
            label2.Visible = false;
            label3.Visible = false;
            label4.Visible = false;
            label5.Visible = false;
            label7.Visible = false;

            //INFORMACIÓN
            pictureBox1.Visible = false;
            lInformación.Visible = false;
            label6.Visible = false;

        }

    }
}
