using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Button;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel;

namespace Proyecto
{
    public partial class Form2 : Form
    {
        public Point ubicacionForm1;
        private string connectionString;
        private List<(string, string, string, string)> preguntas = new List<(string, string, string, string)>();
        private List<int> preguntasUtilizadas = new List<int>();
        private Random random = new Random();
        private int indiceActual;
        private decimal Puntos = 0.00M;
        private DateTime tiempoInicial;

        public Form2(string profesorID)
        {
            InitializeComponent();
            this.MaximizeBox = false; // Deshabilitar el botón de maximizar
            this.FormBorderStyle = FormBorderStyle.FixedSingle; // Deshabilitar que se pueda extirar la ventana

            //label10.Text = ProfesorID;
            //connectionString = "Server=tcp:telecotest.database.windows.net,1433;Initial Catalog=TelecoTest;Persist Security Info=False;User ID=revilla;Password=Lapspmolamucho5%;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"; //Base de Datos online
            connectionString = @"Data Source=REVILLA\SQLEXPRESSDB;Initial Catalog=master ;User ID=sa;Password=revilla"; //Base de Datos local

            button3.Click += button3_Click_1;


            CargarPreguntasDesdeDB(profesorID);
            SiguientePregunta();
        }
        private void button3_Click_1(object sender, EventArgs e)
        {
            // Obtener la ID del profesor ingresada por el usuario
            string profesorID = TBProfesorID.Text;

            // Validar que se haya ingresado una ID de profesor
            if (!string.IsNullOrEmpty(profesorID))
            {
                // Cargar las preguntas desde la base de datos utilizando la ID del profesor
                CargarPreguntasDesdeDB(profesorID);

                // Mostrar la primera pregunta
                SiguientePregunta();
            }
            else
            {
                MessageBox.Show("Por favor, ingrese la ID del profesor.");
            }
        }

        private void CargarPreguntasDesdeDB(string profesorID)
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();
                string query = "SELECT Pregunta, Respuesta1, Respuesta2, Respuesta3 FROM Preguntas WHERE ProfesorID = @ProfesorID";

                SqlCommand command = new SqlCommand(query, connection);
                Form1 form1 = new Form1();
                command.Parameters.AddWithValue("@ProfesorID", profesorID);
                command.ExecuteNonQuery();

                SqlDataReader reader = command.ExecuteReader();

                while (reader.Read())
                {
                    string pregunta = reader.GetString(0);
                    string respuesta1 = reader.GetString(1);
                    string respuesta2 = reader.GetString(2);
                    string respuesta3 = reader.GetString(3);

                    preguntas.Add((pregunta, respuesta1, respuesta2, respuesta3));
                }

                reader.Close();
                connection.Close();
            }
        }

        private void checkBox3_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox3.Checked)
            {
                if (checkBox3.Text == preguntas[indiceActual].Item2)
                {
                    label5.Text = "La respuesta es: Correcta";
                    Puntos += 1M;
                }
                else
                {
                    label5.Text = "La respuesta es: Incorrecta";
                    Puntos -= 0.33M;
                }

                label6.Text = Puntos.ToString();
                checkBox3.Checked = false;
                SiguientePregunta();

                string mensaje = "Pregunta " + preguntasUtilizadas.Count + " de 10"; //Pregunta X de 10
                label9.Text = mensaje;
            }
        }

        private void checkBox2_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox2.Checked)
            {
                if (checkBox2.Text == preguntas[indiceActual].Item2)
                {
                    label5.Text = "La respuesta es: Correcta";
                    Puntos += 1M;
                }
                else
                {
                    label5.Text = "La respuesta es: Incorrecta";
                    Puntos -= 0.33M;
                }

                label6.Text = Puntos.ToString();
                checkBox2.Checked = false;
                SiguientePregunta();

                string mensaje = "Pregunta " + preguntasUtilizadas.Count + " de 10"; //Pregunta X de 10
                label9.Text = mensaje;
            }
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox1.Checked)
            {
                if (checkBox1.Text == preguntas[indiceActual].Item2)
                {
                    label5.Text = "La respuesta es: Correcta";
                    Puntos += 1M;
                }
                else
                {
                    label5.Text = "La respuesta es: Incorrecta";
                    Puntos -= 0.33M;
                }

                label6.Text = Puntos.ToString();
                checkBox1.Checked = false;
                SiguientePregunta();

                string mensaje = "Pregunta " + preguntasUtilizadas.Count + " de 10"; //Pregunta X de 10
                label9.Text = mensaje;
            }
        }

        private void SiguientePregunta()
        {
            if (preguntasUtilizadas.Count == preguntas.Count)
            {
                preguntasUtilizadas.Clear();
            }

            indiceActual = random.Next(preguntas.Count);

            while (preguntasUtilizadas.Contains(indiceActual)) //Para que no se repita
            {
                indiceActual = random.Next(preguntas.Count);
            }

            preguntasUtilizadas.Add(indiceActual);

            label1.Text = preguntas[indiceActual].Item1;
            List<string> respuestasPosibles = new List<string>()
            {
                preguntas[indiceActual].Item2,
                preguntas[indiceActual].Item3,
                preguntas[indiceActual].Item4
            };

            respuestasPosibles = respuestasPosibles.OrderBy(r => random.Next()).ToList();

            checkBox1.Text = respuestasPosibles[0];
            checkBox2.Text = respuestasPosibles[1];
            checkBox3.Text = respuestasPosibles[2];

            if (preguntasUtilizadas.Count == 11)
            {
                decimal puntos = decimal.Parse(label6.Text);

                string Usuario = label7.Text;
                string Contrasena = label8.Text;

                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    if (Puntos < 0) //Si sacas puntuación negativa, guarda un 0
                    {
                        Puntos = 0;
                    }

                    string consulta = "SELECT Puntos FROM Usuarios WHERE Usuario=@Usuario AND Contrasena=@Contrasena";

                    using (SqlCommand comandorevisar = new SqlCommand(consulta, connection))
                    {
                        connection.Open();
                        comandorevisar.Parameters.AddWithValue("@Usuario", Usuario);
                        comandorevisar.Parameters.AddWithValue("@contrasena", Contrasena);

                        using (SqlDataReader lector = comandorevisar.ExecuteReader(CommandBehavior.SingleResult))
                        {
                            if (lector.Read())
                            {
                                decimal puntosanteriores;

                                if (lector.IsDBNull(0)) // Para que no de error si hay valor NULL
                                {
                                    puntosanteriores = -1;
                                    double tiempoMilisegundos = (DateTime.Now - tiempoInicial).TotalMilliseconds;
                                    TimeSpan tiempoTotal = TimeSpan.FromMilliseconds(tiempoMilisegundos);
                                    string tiempoTotalString = tiempoTotal.ToString(@"hh\:mm\:ss\.fff");

                                    using (SqlConnection connection2 = new SqlConnection(connectionString)) //Guarda puntos 0.00 pero tiempo si
                                    {
                                        connection2.Open();
                                        string query = "UPDATE Usuarios SET Puntos=@Puntos, Tiempo=@Tiempo, ProfesorID=@ProfesorID WHERE Usuario=@Usuario";

                                        using (SqlCommand comando = new SqlCommand(query, connection))
                                        {
                                            comando.Parameters.AddWithValue("@Puntos", 0);
                                            comando.Parameters.AddWithValue("@Tiempo", tiempoTotalString);
                                            comando.Parameters.AddWithValue("@ProfesorID", TBProfesorID.Text);
                                            comando.Parameters.AddWithValue("@Usuario", label7.Text);
                                            lector.Close();
                                            comando.ExecuteNonQuery();
                                        }
                                        connection2.Close();
                                    }
                                    //MessageBox.Show("Has obtenido puntuación negativa,.");
                                }
                                else
                                {
                                    puntosanteriores = lector.GetDecimal(0);
                                }

                                lector.Close();

                                if (Puntos <= puntosanteriores)
                                {
                                    //MessageBox.Show("Los puntos son iguales o menores a los que ya tienes. Por favor, obtén puntos positivos en futuras partidas.");
                                }
                                else
                                {
                                    consulta = "UPDATE usuarios SET Puntos=@Puntos WHERE Usuario=@Usuario AND Contrasena=@Contrasena";

                                    using (SqlCommand comandoupdate = new SqlCommand(consulta, connection))
                                    {
                                        comandoupdate.Connection = connection;
                                        comandoupdate.Parameters.AddWithValue("@Puntos", Puntos);
                                        comandoupdate.Parameters.AddWithValue("@Usuario", Usuario);
                                        comandoupdate.Parameters.AddWithValue("@Contrasena", Contrasena);
                                        comandoupdate.Parameters.AddWithValue("@ProfesorID", TBProfesorID.Text);
                                        comandoupdate.ExecuteNonQuery();

                                        //MessageBox.Show("Los puntos se han guardado correctamente.");

                                        double tiempoMilisegundos = (DateTime.Now - tiempoInicial).TotalMilliseconds;
                                        TimeSpan tiempoTotal = TimeSpan.FromMilliseconds(tiempoMilisegundos);
                                        string tiempoTotalString = tiempoTotal.ToString(@"hh\:mm\:ss\.fff");

                                        using (SqlConnection connection2 = new SqlConnection(connectionString)) //guardar el tiempo
                                        {
                                            string query = "UPDATE Usuarios SET Tiempo=@Tiempo WHERE Usuario=@Usuario";

                                            using (SqlCommand comando = new SqlCommand(query, connection))
                                            {
                                                comando.Connection = connection;
                                                comando.Parameters.AddWithValue("@Tiempo", tiempoTotalString);
                                                comando.Parameters.AddWithValue("@Usuario", label7.Text);
                                                comando.ExecuteNonQuery();
                                            }
                                            //connection.Close();
                                        }
                                    }
                                }
                            }
                            else
                            {
                                MessageBox.Show("Error a la hora de guardar los datos.");
                            }
                        }

                        connection.Close();
                    }
                }

                Form3 form3 = new Form3();

                form3.label13.Text = Usuario;
                form3.label14.Text = Usuario;

                form3.Show();
                this.Close();
            }
        }

        private void Form2_Load(object sender, EventArgs e)
        {

            this.Location = ubicacionForm1;

            tiempoInicial = DateTime.Now;

            label5.Text = "La Respuesta es: ";
            Puntos = 0.00M;
            label6.Text = Puntos.ToString();

            //label9.BackColor = Color.Transparent;
            //label1.BackColor = Color.Transparent;
            //label2.BackColor = Color.Transparent;
            //label3.BackColor = Color.Transparent;
            //label4.BackColor = Color.Transparent;
            //checkBox1.BackColor = Color.Transparent;
            //checkBox2.BackColor = Color.Transparent;
            //checkBox3.BackColor = Color.Transparent;
        }

        private void button1_Click(object sender, EventArgs e) //boton Siguiente pregunta 
        {
            SiguientePregunta();
            string mensaje = "Pregunta " + preguntasUtilizadas.Count + " de 10"; //Pregunta X de 10
            label9.Text = mensaje;
        }
    }
}
